{"version":3,"sources":["components/Chart/Chart.module.css","images/covid19_logo.png","../node_modules/moment/src/lib/locale sync","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Cards","data","confirmed","recovered","lastUpdate","deaths","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cn","card","infected","CardContent","Typography","variant","color","gutterBottom","start","end","value","separator","active","update","Date","toLocaleTimeString","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modData","map","dailyData","total","deathsInChina","china","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","hoverBackgroundColor","fill","pieChart","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","target","i","key","App","props","fetchedData","setState","state","this","src","coronaImg","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa4f8790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__UVBno\"};","module.exports = __webpack_public_path__ + \"static/media/covid19_logo.c1633e99.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 162;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cn from 'classnames'\r\n\r\nconst Cards = ({data:{confirmed, recovered, lastUpdate, deaths }}) => {\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n              <Grid item component ={Card} xs={12} md={4} className={cn(styles.card, styles.infected)}>\r\n                 <CardContent>\r\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>INFECTED</Typography>\r\n                    <Typography variant=\"h3\">\r\n                        <CountUp start={0} end={confirmed.value} separator=',' />\r\n                    </Typography>     \r\n                 </CardContent>\r\n              </Grid>\r\n              <Grid item component={Card} xs={12} md={4} className={cn(styles.card, styles.active)}>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>ACTIVE CASES</Typography>\r\n                    <Typography variant=\"h3\">\r\n                        <CountUp start={0} end={confirmed.value - (recovered.value + deaths.value)} separator=',' />\r\n                    </Typography>\r\n                </CardContent>\r\n              </Grid>\r\n              <Grid item component ={Card} xs={12} md={4} className={cn(styles.card, styles.recovered)}>\r\n                 <CardContent>\r\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>RECOVERED</Typography>\r\n                    <Typography variant=\"h3\">\r\n                        <CountUp start={0} end={recovered.value} separator=',' />\r\n                    </Typography>\r\n                 </CardContent>\r\n              </Grid>\r\n              <Grid item component ={Card} xs={12} md={4} className={cn(styles.card, styles.deaths)}>\r\n                 <CardContent>\r\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>DEATHS</Typography>\r\n                    <Typography variant=\"h3\">\r\n                        <CountUp start={0} end={deaths.value} separator=',' />\r\n                    </Typography>\r\n                 </CardContent>\r\n              </Grid>\r\n              \r\n            </Grid>\r\n            <Grid container spacing={3} justify=\"center\" >\r\n              <Grid item component={Card} xs={12} md={3} className={styles.update}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>Last Update</Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleTimeString()}</Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                </CardContent>\r\n               </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data:{confirmed , recovered, lastUpdate, deaths} } = await axios.get(changeableUrl);\r\n        \r\n        \r\n        return { confirmed, recovered, lastUpdate, deaths };\r\n        \r\n    } catch (error) {\r\n        console.log('error')\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get('https://covid19.mathdro.id/api/daily')\r\n        const modData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            deathsInChina: dailyData.deaths.china,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modData;\r\n    } catch (error) {\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data:{ countries } } = await axios.get('https://covid19.mathdro.id/api/countries');\r\n        \r\n        return countries.map((country) =>  country.name)\r\n        \r\n    } catch (error) {\r\n        console.log('Error');\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Doughnut } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data:{confirmed, deaths, recovered} , country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n       const fetchAPI = async () =>{\r\n           const dailyData = await fetchDailyData();\r\n           setDailyData(dailyData);\r\n       }\r\n\r\n       fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n         ?( <Line\r\n             data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets:[{\r\n                  data: dailyData.map(({confirmed}) => confirmed),\r\n                  label: 'Infected',\r\n                  borderColor: '#3333ff',\r\n                  backgroundColor: 'rgba(5, 5, 220, 0.5)',\r\n                  hoverBackgroundColor: 'blue',\r\n                  fill: true,\r\n              }, \r\n                {\r\n                  data: dailyData.map(({deaths}) => deaths),\r\n                  label: 'Deaths',\r\n                  borderColor: 'red',\r\n                  backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                  hoverBackgroundColor:'red',\r\n                  fill: true,\r\n                },\r\n                {\r\n                    data: dailyData.map(({deathsInChina}) => deathsInChina),\r\n                    label: 'Deaths in China',\r\n                    borderColor: 'Orange',\r\n                    backgroundColor: 'rgba(250, 5, 5, 0.5)',\r\n                    hoverBackgroundColor:'orange',\r\n                    fill: true,\r\n                  },\r\n            ],\r\n             }}\r\n            />) : null\r\n    );\r\n\r\n    const pieChart = \r\n        (confirmed ? <Doughnut \r\n            data = {{\r\n                labels: ['Active', 'Deaths', 'Recovered'],\r\n                datasets: [{\r\n                    backgroundColor: [ '#ff8000','#ff0000','#00ff00',],\r\n                    data: [(confirmed.value-(recovered.value + deaths.value)), deaths.value, recovered.value,]\r\n                }],\r\n\r\n            }}\r\n        /> : null)\r\n    \r\n\r\n    \r\n\r\n    return(\r\n        <div className={styles.container}>{country ? pieChart : lineChart}</div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\nimport  styles  from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setfetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setfetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setfetchedCountries]);\r\n\r\n   \r\n\r\n    return(\r\n       <div className={styles.container}>\r\n          <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} >\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n          </FormControl>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import react from 'react';\r\n\r\nimport styles from './App.module.css';\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport { fetchData, fetchDailyData } from './api';\r\nimport coronaImg from './images/covid19_logo.png';\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data:{},\r\n             country:'',\r\n        }\r\n    }\r\n  \r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({data : fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n       const { data , country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n                <img src={coronaImg} className={styles.image}/>\r\n                <CountryPicker handleCountryChange = {this.handleCountryChange} />\r\n                <Cards data={data}/>\r\n                <Chart data={data} country={country}/>\r\n                {console.log(data)}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1JkRs\",\"card\":\"Cards_card__1oO7t\",\"update\":\"Cards_update__3dnMP\",\"infected\":\"Cards_infected__2GmPn\",\"active\":\"Cards_active__1qy6h\",\"recovered\":\"Cards_recovered__PwICZ\",\"deaths\":\"Cards_deaths__3fK86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2XyVB\",\"image\":\"App_image__2tBCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2sv8l\",\"formControl\":\"CountryPicker_formControl__3vH0L\"};"],"sourceRoot":""}